name: Build project

on:
  pull_request: {}
  push: {}

jobs:
  unity_Builder:
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    env:
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2019.3.3f1
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows # Build a Windows standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
          - iOS # Build an iOS player.
          #- Android # Build an Android .apk standalone app.
    steps:
      - name: Clone repo
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Cached libraries
        uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-
      - name: Build
        uses: webbertakken/unity-builder@master
        with:
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          versioning: Semantic
          androidVersionCode: 0
          androidKeystoreName: Suivi-Scolaire.keystore
          androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          androidKeyaliasName: suivi-scolaire
          androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}
      - name: Upload build
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.targetPlatform }}
          path: build

  iOS_Builder:
    name: Build iOS App
    runs-on: macos-latest
    needs: [unity_Builder]
    steps:
      - name: Download XCode Project
        uses: actions/download-artifact@v1.0.0
        with:
          name: iOS
          path: xcode

      - name: Install XCode
        uses: sinoru/actions-setup-xcode@v1.1
        with:
          xcode-version: '11.4' # Exact version of a Xcode version to use
          apple-id: ${{ secrets.APPLE_EMAIL }} # Apple ID to download from Apple Developer when Xcode not available in local
          apple-id-password: ${{ secrets.APPLE_PASSWORD }}
      - name: Install xcbeautify
        uses: Cyberbeni/install-swift-tool@v1
        with:
          url: https://github.com/thii/xcbeautify
      - name: Build Archive
        run: |
          chmod -R 777 xcode/iOS/iOS/;
          set -o pipefail && xcodebuild -project xcode/iOS/iOS/Unity-iPhone.xcodeproj -scheme Unity-iPhone -configuration Release -sdk iphoneos -parallelizeTargets -quiet -archivePath build/archive.xcarchive clean archive CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGN_ENTITLEMENTS="" CODE_SIGNING_ALLOWED="NO" AD_HOC_CODE_SIGNING_ALLOWED="YES" | xcbeautify -q;
      - name: Upload archive
        uses: actions/upload-artifact@v1
        with:
          name: iOS Archive
          path: build/

      - name: Install Dependencies
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)";
          brew install dpkg;
          brew install ldid;
      - name: Create IPA File
        run: |
          mkdir -p build/IPA/Payload;
          mkdir build/IPAOutput;
          echo "
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
            <dict>
              <key>com.06Games.Suivi-Scolaire</key>
              <true/>
            </dict>
          </plist>
          " > entitlements.xml;
          cp -r build/archive.xcarchive/Products/Applications/. build/IPA/Payload/;
          ldid -Sentitlements.xml build/IPA/Payload/Suivi-Scolaire.app/Suivi-Scolaire;
          cd build/IPA;
          zip -0 -y -r ../IPAOutput/Suivi-Scolaire.ipa Payload/;
      - name: Upload IPA
        uses: actions/upload-artifact@v1
        with:
          name: iOS IPA
          path: build/IPAOutput

      - name: Create DEB File
        run: |
          mkdir -p build/SuiviScolaireapp;
          mkdir -p build/SuiviScolaireapp/DEBIAN;
          echo "
          Package: com.06Games.Suivi-Scolaire
          Version: 0.2.3
          Name: Suivi-Scolaire
          Section: Application
          Description: Suivi Scolaire is a mobile/web application that allows easy use of different school life management services
          Architecture: iphoneos-arm
          Author: 06Games
          Maintainer: Evan Galli
          Depends: net.angelxwind.appsyncunified
          " > build/SuiviScolaireapp/DEBIAN/control;
          cp -r build/IPA/Payload build/SuiviScolaireapp/Applications/;
          dpkg-deb -b build/SuiviScolaireapp;
          mkdir -p build/Output;
          mv build/SuiviScolaireapp.deb build/Output/SuiviScolaireapp.deb;
          
      - name: Upload DEB
        uses: actions/upload-artifact@v1
        with:
          name: iOS DEB
          path: build/Output
